trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  nodeVersion: '20.x'

stages:

- stage: Build
  displayName: 'Build & Test Stage'
  jobs:

  - job: Frontend
    displayName: 'Angular Frontend: Build & Test'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    - script: |
        npm install -g @angular/cli
        npm ci
      displayName: 'Install Angular Dependencies'

    - script: |
        ng lint
        ng test --watch=false --browsers=ChromeHeadless
        ng build --configuration production
      displayName: 'Run Tests & Build Angular Frontend'

    - publish: $(System.DefaultWorkingDirectory)/dist
      artifact: 'frontend'
      displayName: 'Publish Frontend Artifact'

  - job: Backend
    displayName: 'Backend: Build & Test'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '9.x.x'
      displayName: 'Install .NET 9 SDK'

    - script: |
        dotnet restore
        dotnet build --configuration $(buildConfiguration)
        dotnet test --no-build --configuration $(buildConfiguration) --logger "trx"
      displayName: 'Restore, Build & Test Backend'

    - script: |
        dotnet publish -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/backend
      displayName: 'Publish Backend'

    - publish: $(Build.ArtifactStagingDirectory)/backend
      artifact: 'backend'
      displayName: 'Publish Backend Artifact'

- stage: Deploy
  displayName: 'Deployment Stage'
  dependsOn: Build
  jobs:
  - deployment: DeployWebApp
    displayName: 'Deploy to Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: frontend
            displayName: 'Download Frontend Artifact'

          - download: current
            artifact: backend
            displayName: 'Download Backend Artifact'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: '<YOUR_AZURE_SERVICE_CONNECTION>'
              appType: 'webApp'
              appName: 'country-explorer'
              package: '$(Pipeline.Workspace)/frontend/**/*'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: '<YOUR_AZURE_SERVICE_CONNECTION>'
              appType: 'webApp'
              appName: 'CountryExplorer'
              package: '$(Pipeline.Workspace)/backend/**/*'
