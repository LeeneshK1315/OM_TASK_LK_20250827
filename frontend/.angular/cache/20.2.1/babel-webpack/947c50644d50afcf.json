{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.component.css?ngResource\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { FlagsService } from '../../services/flags.service';\nimport { FormsModule } from '@angular/forms';\nlet HomeComponent = class HomeComponent {\n  flags = inject(FlagsService);\n  items = [];\n  loading = false;\n  error = '';\n  searchTerm = '';\n  encodeURIComponent = encodeURIComponent;\n  ngOnInit() {\n    this.flags.getAllFlags().subscribe({\n      next: rows => {\n        debugger;\n        this.items = rows.filter(r => r?.countryName && r?.flagUrl).map(r => ({\n          countryName: r.countryName,\n          flagUrl: r.flagUrl\n        })).sort((a, b) => a.countryName.localeCompare(b.countryName));\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load flags';\n        this.loading = false;\n      }\n    });\n  }\n  get filteredItems() {\n    if (!this.searchTerm) return this.items;\n    const term = this.searchTerm.toLowerCase();\n    return this.items.filter(c => c.countryName.toLowerCase().includes(term));\n  }\n};\nHomeComponent = __decorate([Component({\n  standalone: true,\n  imports: [CommonModule, RouterLink, FormsModule],\n  selector: 'app-home',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","inject","CommonModule","RouterLink","FlagsService","FormsModule","HomeComponent","flags","items","loading","error","searchTerm","encodeURIComponent","ngOnInit","getAllFlags","subscribe","next","rows","filter","r","countryName","flagUrl","map","sort","a","b","localeCompare","filteredItems","term","toLowerCase","c","includes","__decorate","standalone","imports","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\OM_Assessment_LK\\frontend\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FlagsService } from '../../services/flags.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink, FormsModule],\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  \r\n})\r\nexport class HomeComponent implements OnInit {\r\n  private flags = inject(FlagsService);\r\n  items: any[] = [];\r\n  loading = false;\r\n  error = '';\r\n  searchTerm = '';\r\n\r\n  encodeURIComponent = encodeURIComponent;\r\n\r\n  ngOnInit() {\r\n    this.flags.getAllFlags().subscribe({\r\n      next: (rows) => {\r\n        debugger;\r\n        this.items = (rows as any[])\r\n          .filter(r => r?.countryName && (r?.flagUrl))\r\n          .map(r => ({ countryName: r.countryName, flagUrl: r.flagUrl }))\r\n          .sort((a, b) => a.countryName.localeCompare(b.countryName));\r\n        this.loading = false;\r\n      },\r\n      error: () => { this.error = 'Failed to load flags'; this.loading = false; }\r\n    });\r\n  }\r\n\r\n  get filteredItems() {\r\n    if (!this.searchTerm) return this.items;\r\n    const term = this.searchTerm.toLowerCase();\r\n    return this.items.filter(c =>\r\n      c.countryName.toLowerCase().includes(term)\r\n    );\r\n  }\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,WAAW,QAAQ,gBAAgB;AAUrC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAChBC,KAAK,GAAGN,MAAM,CAACG,YAAY,CAAC;EACpCI,KAAK,GAAU,EAAE;EACjBC,OAAO,GAAG,KAAK;EACfC,KAAK,GAAG,EAAE;EACVC,UAAU,GAAG,EAAE;EAEfC,kBAAkB,GAAGA,kBAAkB;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACN,KAAK,CAACO,WAAW,EAAE,CAACC,SAAS,CAAC;MACjCC,IAAI,EAAGC,IAAI,IAAI;QACb;QACA,IAAI,CAACT,KAAK,GAAIS,IAAc,CACzBC,MAAM,CAACC,CAAC,IAAIA,CAAC,EAAEC,WAAW,IAAKD,CAAC,EAAEE,OAAQ,CAAC,CAC3CC,GAAG,CAACH,CAAC,KAAK;UAAEC,WAAW,EAAED,CAAC,CAACC,WAAW;UAAEC,OAAO,EAAEF,CAAC,CAACE;QAAO,CAAE,CAAC,CAAC,CAC9DE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,WAAW,CAACM,aAAa,CAACD,CAAC,CAACL,WAAW,CAAC,CAAC;QAC7D,IAAI,CAACX,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAEA,CAAA,KAAK;QAAG,IAAI,CAACA,KAAK,GAAG,sBAAsB;QAAE,IAAI,CAACD,OAAO,GAAG,KAAK;MAAE;KAC3E,CAAC;EACJ;EAEA,IAAIkB,aAAaA,CAAA;IACf,IAAI,CAAC,IAAI,CAAChB,UAAU,EAAE,OAAO,IAAI,CAACH,KAAK;IACvC,MAAMoB,IAAI,GAAG,IAAI,CAACjB,UAAU,CAACkB,WAAW,EAAE;IAC1C,OAAO,IAAI,CAACrB,KAAK,CAACU,MAAM,CAACY,CAAC,IACxBA,CAAC,CAACV,WAAW,CAACS,WAAW,EAAE,CAACE,QAAQ,CAACH,IAAI,CAAC,CAC3C;EACH;CACD;AA9BYtB,aAAa,GAAA0B,UAAA,EARzBhC,SAAS,CAAC;EACTiC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAChC,YAAY,EAAEC,UAAU,EAAEE,WAAW,CAAC;EAChD8B,QAAQ,EAAE,UAAU;EACpBC,QAAA,EAAAC,oBAAoC;;CAGrC,CAAC,C,EACW/B,aAAa,CA8BzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}