{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.component.css?ngResource\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { FlagsService } from '../../services/flags.service';\nlet HomeComponent = class HomeComponent {\n  flags = inject(FlagsService);\n  loading = true;\n  error;\n  items = [];\n  ngOnInit() {\n    this.flags.getAllFlags().subscribe({\n      next: rows => {\n        this.items = rows.filter(r => r?.countryName && (r?.flagUrl?.svg || r?.flagUrl?.png)).map(r => ({\n          name: r.name.common,\n          flag: r.flags.svg ?? r.flags.png\n        })).sort((a, b) => a.name.localeCompare(b.name));\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load flags';\n        this.loading = false;\n      }\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  selector: 'app-home',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","inject","CommonModule","RouterLink","FlagsService","HomeComponent","flags","loading","error","items","ngOnInit","getAllFlags","subscribe","next","rows","filter","r","countryName","flagUrl","svg","png","map","name","common","flag","sort","a","b","localeCompare","__decorate","standalone","imports","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\OM_Assessment_LK\\frontend\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FlagsService } from '../../services/flags.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink],\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  private flags = inject(FlagsService);\r\n  loading = true; error?: string; items: { countryName: string, flagUrl: string }[] = [];\r\n\r\n  ngOnInit() {\r\n    this.flags.getAllFlags().subscribe({\r\n      next: (rows) => {\r\n        this.items = (rows as any[])\r\n          .filter(r => r?.countryName && (r?.flagUrl?.svg || r?.flagUrl?.png))\r\n          .map(r => ({ name: r.name.common, flag: r.flags.svg ?? r.flags.png }))\r\n          .sort((a, b) => a.name.localeCompare(b.name));\r\n        this.loading = false;\r\n      },\r\n      error: () => { this.error = 'Failed to load flags'; this.loading = false; }\r\n    });\r\n  }\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,YAAY,QAAQ,8BAA8B;AASpD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAChBC,KAAK,GAAGL,MAAM,CAACG,YAAY,CAAC;EACpCG,OAAO,GAAG,IAAI;EAAEC,KAAK;EAAWC,KAAK,GAA+C,EAAE;EAEtFC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,WAAW,EAAE,CAACC,SAAS,CAAC;MACjCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACL,KAAK,GAAIK,IAAc,CACzBC,MAAM,CAACC,CAAC,IAAIA,CAAC,EAAEC,WAAW,KAAKD,CAAC,EAAEE,OAAO,EAAEC,GAAG,IAAIH,CAAC,EAAEE,OAAO,EAAEE,GAAG,CAAC,CAAC,CACnEC,GAAG,CAACL,CAAC,KAAK;UAAEM,IAAI,EAAEN,CAAC,CAACM,IAAI,CAACC,MAAM;UAAEC,IAAI,EAAER,CAAC,CAACV,KAAK,CAACa,GAAG,IAAIH,CAAC,CAACV,KAAK,CAACc;QAAG,CAAE,CAAC,CAAC,CACrEK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,IAAI,CAACM,aAAa,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC;QAC/C,IAAI,CAACf,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAEA,CAAA,KAAK;QAAG,IAAI,CAACA,KAAK,GAAG,sBAAsB;QAAE,IAAI,CAACD,OAAO,GAAG,KAAK;MAAE;KAC3E,CAAC;EACJ;CACD;AAhBYF,aAAa,GAAAwB,UAAA,EAPzB7B,SAAS,CAAC;EACT8B,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC7B,YAAY,EAAEC,UAAU,CAAC;EACnC6B,QAAQ,EAAE,UAAU;EACpBC,QAAA,EAAAC,oBAAoC;;CAErC,CAAC,C,EACW7B,aAAa,CAgBzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}